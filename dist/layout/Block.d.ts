import React from 'react';
import { CSSProperties } from '../types';
export type BlockVariant = 'aside' | 'article' | 'code' | 'details' | 'div' | 'figcaption' | 'figure' | 'footer' | 'header' | 'li' | 'main' | 'mark' | 'nav' | 'ol' | 'pre' | 'section' | 'summary' | 'time' | 'ul';
export type Margin = 'auto' | number | 'string';
export interface BlockProps extends React.ButtonHTMLAttributes<HTMLDivElement | HTMLDetailsElement | HTMLPreElement | HTMLSelectElement | HTMLTimeElement> {
    as?: BlockVariant;
    alignContent?: CSSProperties.AlignContent;
    alignItems?: CSSProperties.AlignItems;
    alignSelf?: CSSProperties.AlignSelf;
    columnGap?: number;
    display?: CSSProperties.Display;
    flex?: number | string;
    flexBasis?: CSSProperties.FlexBasis;
    flexDirection?: CSSProperties.FlexDirection;
    flexGrow?: CSSProperties.FlexGrow;
    flexShrink?: CSSProperties.FlexShrink;
    flexWrap?: CSSProperties.FlexWrap;
    gap?: number | string;
    height?: number;
    justifyContent?: CSSProperties.JustifyContent;
    justifySelf?: CSSProperties.JustifySelf;
    margin?: Margin;
    marginTop?: Margin;
    marginRight?: Margin;
    marginBottom?: Margin;
    marginLeft?: Margin;
    maxHeight?: number;
    maxWidth?: number;
    minHeight?: number;
    minWidth?: number;
    padding?: number | string;
    paddingTop?: number;
    paddingRight?: number;
    paddingBottom?: number;
    paddingLeft?: number;
    rowGap?: number;
    unit?: CSSProperties.Unit;
    width?: number;
}
export default function Block({ as, alignContent, alignItems, alignSelf, children, columnGap, display, flex, flexBasis, flexDirection, flexGrow, flexShrink, flexWrap, gap, height, rowGap, justifyContent, justifySelf, margin, marginTop, marginRight, marginBottom, marginLeft, maxHeight, maxWidth, minHeight, minWidth, padding, paddingTop, paddingRight, paddingBottom, paddingLeft, unit, width, ...restProps }: BlockProps): JSX.Element;
